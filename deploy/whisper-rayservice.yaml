apiVersion: ray.io/v1
kind: RayService
metadata:
  name: whisper-streaming
  namespace: default
spec:
  deploymentUnhealthySecondThreshold: 300
  rayClusterConfig:
    enableInTreeAutoscaling: true
    headGroupSpec:
      rayStartParams:
        dashboard-host: 0.0.0.0
      template:
        spec:
          containers:
            - env:
                - name: RAY_GRAFANA_HOST
                  value: http://kube-prometheus-stack-grafana.kube-prometheus-stack.svc:80
                - name: RAY_PROMETHEUS_HOST
                  value: http://kube-prometheus-stack-prometheus.kube-prometheus-stack.svc:9090
              image: YOUR_REGISTRY/whisper-streaming:latest
              name: ray-head
              resources:
                limits:
                  cpu: "4"
                  memory: 16Gi
                requests:
                  cpu: "2"
                  memory: 8Gi
              ports:
                - containerPort: 6379
                  name: gcs
                - containerPort: 8265
                  name: dashboard
                - containerPort: 8000
                  name: serve
                - containerPort: 10001
                  name: client
          serviceAccountName: ray-cluster-service-account
    workerGroupSpecs:
      - replicas: 1
        minReplicas: 1
        maxReplicas: 10
        groupName: gpu-worker-group
        rayStartParams: { }
        template:
          spec:
            containers:
              - name: ray-worker
                image: YOUR_REGISTRY/whisper-streaming:latest
                resources:
                  limits:
                    cpu: "4"
                    memory: 16Gi
                    nvidia.com/gpu: "1"
                  requests:
                    cpu: "2"
                    memory: 8Gi
                    nvidia.com/gpu: "1"
            serviceAccountName: ray-cluster-service-account
  serveConfigV2: |
    applications:
      - name: whisper_streaming
        import_path: app:create_app
        runtime_env: {}
        route_prefix: /
    proxy_location: HeadOnly
    http_options:
      host: 0.0.0.0
      port: 8000
---
apiVersion: v1
kind: Service
metadata:
  name: whisper-streaming-serve-svc
  namespace: default
spec:
  ports:
    - name: http
      port: 8000
      protocol: TCP
      targetPort: 8000
  selector:
    component: ray-head
    rayservice: whisper-streaming
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: whisper-streaming-head-svc
  namespace: default
spec:
  ports:
    - name: gcs
      port: 6379
      protocol: TCP
      targetPort: 6379
    - name: dashboard
      port: 8265
      protocol: TCP
      targetPort: 8265
    - name: client
      port: 10001
      protocol: TCP
      targetPort: 10001
    - name: metrics
      port: 8080
      protocol: TCP
      targetPort: 8080
    - name: serve
      port: 8000
      protocol: TCP
      targetPort: 8000
  selector:
    component: ray-head
    rayservice: whisper-streaming
  type: ClusterIP
---
# Service account for Ray clusters
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ray-cluster-service-account
  namespace: default
---
# RBAC for the service account
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: ray-cluster-role
  namespace: default
rules:
  - apiGroups: [ "" ]
    resources: [ "pods", "services" ]
    verbs: [ "get", "watch", "list", "create", "delete", "patch" ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ray-cluster-role-binding
  namespace: default
subjects:
  - kind: ServiceAccount
    name: ray-cluster-service-account
    namespace: default
roleRef:
  kind: Role
  name: ray-cluster-role
  apiGroup: rbac.authorization.k8s.io